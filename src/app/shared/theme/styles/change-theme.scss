@import "constants";

@mixin change-theme($theme, $alternate-theme) {
  $primary: map-get($theme, primary);
  $primary-darker: mat-color(mat-palette($primary, darker));
  $primary-node-toolbar : mat-color(mat-palette($primary, A700));
  $accent: map-get($theme, accent);
  $accent-color: mat-color(mat-palette($accent));
  $warn: map-get($theme, warn);
  $foreground: map-get($theme, foreground);
  $background: map-get($theme, background);
  $alternate-primary: map-get($alternate-theme, primary);

  .bg-primary {
    @include _mat-toolbar-color($primary);
  }

  .bg-accent {
    @include _mat-toolbar-color($accent);
  }

  .bg-warn {
    @include _mat-toolbar-color($warn);
  }

  .btn-primary-darker {
    background-color: $primary-darker;
    color: $accent-color;
    border-radius: 1.6rem;
    text-transform: capitalize;
  }

  .bg-alternate-primary {
    @include _mat-toolbar-color($alternate-primary);
  }

  .toolbar-dropdown-menu {
    @include _mat-toolbar-color($alternate-primary);
  }

  .foreground.mat-progress-spinner circle, .foreground.mat-spinner circle {
    stroke: mat-color($foreground, text);
  }

  .mat-toolbar-row, .mat-toolbar-single-row {
    height: $toolbar-height;
  }

  .lnd-info{
    border-bottom: 1px solid mat-color($foreground, divider);
  }

  a {
    color: white;
  }

  .active-link {
    color: mat-color($primary); 
    font-weight: 500;
    cursor: pointer;
  }

  .mat-tree-node:hover, .mat-nested-tree-node-parent:hover, .mat-menu-item:hover {
    color: mat-color($primary); 
    cursor: pointer;
    background: rgba(0, 0, 0, 0.04);
  }

  .mat-button.app-config-nodes {
    border-radius: 0;
    border-bottom: 2px solid mat-color($primary);
  }

  .mat-button.app-config-nodes:hover, .top-toolbar-icon:hover {
    background: mat-color($primary, darker);
  }

  .mat-button.app-config-nodes.selected-node {
    border-bottom: 2px solid mat-color($accent);
  }

  .h-active-link {
    border-bottom: 2px solid mat-color($accent);
  }
  
  .ngx-charts {
    fill: mat-color($foreground, text);
    .bar {
      fill: mat-color($primary) !important;
      cursor: default;
    }
  }

  .mat-primary .mat-select, .mat-primary .mat-select-trigger, .mat-primary .mat-select-value, .mat-primary .mat-select-arrow {
    // color: white !important;    
  }
  
  .mat-primary .mat-select-panel .mat-option.mat-selected:not(.mat-option-multiple),
  .mat-primary .mat-option.mat-selected:not(.mat-option-multiple):not(.mat-option-disabled) {
    background: none;
    font-weight: 900;
    font-size: $font-size * 1.1;
  }

  .material-icons.primary { color: mat-color($primary); }

  .material-icons.accent { color: mat-color($accent); }

  .validation-error-message {
    position: relative;
    margin-top: 0.5rem;
    width:100%;
    color: mat-color($accent);
  }

  .validation-error-icon {
    font-size: $font-size * 1.2;
    position: relative;
    top: 2px;
    left: 0.4rem;
  }

  .genseed-message {
    width:10%;
    color: mat-color($accent);
    font-size: $font-size * 1.2;
  }

  .insecure-message {
    width:100%;
    color: mat-color($accent);
    font-size: $font-size * 1.2;
  }

  .mat-vertical-content {
    padding: 0 0.4rem 0 1.2rem;
  }

  .row-disabled {
    background-color: gray;
    .mat-icon {
      cursor: not-allowed;
    }
  }

  .mat-menu-panel {
    min-width: 6.4rem;
  }
  
  .horizontal-button {
    height: $toolbar-height;
    border-radius: 0;
    &:hover {
      background: mat-color($primary, darker);
      color: mat-color($accent);
    }
  }

  .horizontal-button-show {
    color: mat-color($accent);
    background: mat-color($primary, lighter);
    border-radius: 12rem;
    &:hover {
      // background: mat-color($primary, darker);
      background: mat-color($accent);
      color: mat-color($primary, darker);
    }
  }

  .page-title {
    font-size: $font-size * 1.1;
    color: mat-color($foreground);
  }
  
}
